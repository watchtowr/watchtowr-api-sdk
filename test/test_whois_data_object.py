# coding: utf-8

"""
    watchTowr Platform Client API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from watchtowr_api.models.whois_data_object import WhoisDataObject

class TestWhoisDataObject(unittest.TestCase):
    """WhoisDataObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WhoisDataObject:
        """Test WhoisDataObject
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WhoisDataObject`
        """
        model = WhoisDataObject()
        if include_optional:
            return WhoisDataObject(
                org = 'ACME Corp',
                city = 'Singapore',
                name = 'John Doe',
                state = 'Singapore',
                dnssec = 'unsigned',
                emails = None,
                status = None,
                address = 'Singapore 123456',
                country = 'Singapore',
                zipcode = '123456',
                registrar = 'GoDaddy.com, LLC',
                domain_name = 'example.com',
                name_servers = None,
                referral_url = '',
                whois_server = 'whois.godaddy.com',
                creation_date = '1989-07-15T04:00:00',
                expiration_date = '2030-07-15T04:00:00'
            )
        else:
            return WhoisDataObject(
        )
        """

    def testWhoisDataObject(self):
        """Test WhoisDataObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
