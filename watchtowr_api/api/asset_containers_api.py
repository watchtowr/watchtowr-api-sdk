# coding: utf-8

"""
    watchTowr Platform Client API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictFloat, StrictInt, StrictStr
from typing import List, Optional, Union
from typing_extensions import Annotated
from watchtowr_api.models.client_container_data import ClientContainerData
from watchtowr_api.models.paginated_client_container import PaginatedClientContainer
from watchtowr_api.models.update_client_next_gen_asset_status_dto import UpdateClientNextGenAssetStatusDto

from watchtowr_api.api_client import ApiClient, RequestSerialized
from watchtowr_api.api_response import ApiResponse
from watchtowr_api.rest import RESTResponseType


class AssetContainersApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_asset_container_details(
        self,
        id: Union[StrictFloat, StrictInt],
        api_token: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ClientContainerData:
        """Show the details of a specific container asset.


        :param id: (required)
        :type id: float
        :param api_token: (required)
        :type api_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_asset_container_details_serialize(
            id=id,
            api_token=api_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '403': "ForbiddenResponse",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_asset_container_details_with_http_info(
        self,
        id: Union[StrictFloat, StrictInt],
        api_token: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ClientContainerData]:
        """Show the details of a specific container asset.


        :param id: (required)
        :type id: float
        :param api_token: (required)
        :type api_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_asset_container_details_serialize(
            id=id,
            api_token=api_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '403': "ForbiddenResponse",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_asset_container_details_without_preload_content(
        self,
        id: Union[StrictFloat, StrictInt],
        api_token: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Show the details of a specific container asset.


        :param id: (required)
        :type id: float
        :param api_token: (required)
        :type api_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_asset_container_details_serialize(
            id=id,
            api_token=api_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '403': "ForbiddenResponse",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_asset_container_details_serialize(
        self,
        id,
        api_token,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        if api_token is not None:
            
            _query_params.append(('api_token', api_token))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/client/assets/container/show/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_list_asset_container(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination page. The default value is 1")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination size. The default value is 10 and the maximum is 30")] = None,
        asset_name: Annotated[Optional[StrictStr], Field(description="Asset name/SaaS URL/IP/IP Range/Port")] = None,
        statuses: Annotated[Optional[List[StrictStr]], Field(description="Asset statuses")] = None,
        business_unit_ids: Annotated[Optional[StrictStr], Field(description="Comma separated list of Business Unit IDs")] = None,
        created_from: Annotated[Optional[datetime], Field(description="created_at Date Range Beginning")] = None,
        created_to: Annotated[Optional[datetime], Field(description="created_at Date Range Ending")] = None,
        updated_from: Annotated[Optional[datetime], Field(description="updated_at Date Range Beginning")] = None,
        updated_to: Annotated[Optional[datetime], Field(description="updated_at Date Range Ending")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PaginatedClientContainer:
        """List all discovered Containers, ordered by date identified.


        :param page: Pagination page. The default value is 1
        :type page: float
        :param page_size: Pagination size. The default value is 10 and the maximum is 30
        :type page_size: float
        :param asset_name: Asset name/SaaS URL/IP/IP Range/Port
        :type asset_name: str
        :param statuses: Asset statuses
        :type statuses: List[str]
        :param business_unit_ids: Comma separated list of Business Unit IDs
        :type business_unit_ids: str
        :param created_from: created_at Date Range Beginning
        :type created_from: datetime
        :param created_to: created_at Date Range Ending
        :type created_to: datetime
        :param updated_from: updated_at Date Range Beginning
        :type updated_from: datetime
        :param updated_to: updated_at Date Range Ending
        :type updated_to: datetime
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_list_asset_container_serialize(
            page=page,
            page_size=page_size,
            asset_name=asset_name,
            statuses=statuses,
            business_unit_ids=business_unit_ids,
            created_from=created_from,
            created_to=created_to,
            updated_from=updated_from,
            updated_to=updated_to,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedClientContainer",
            '401': "Unauthorized",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_list_asset_container_with_http_info(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination page. The default value is 1")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination size. The default value is 10 and the maximum is 30")] = None,
        asset_name: Annotated[Optional[StrictStr], Field(description="Asset name/SaaS URL/IP/IP Range/Port")] = None,
        statuses: Annotated[Optional[List[StrictStr]], Field(description="Asset statuses")] = None,
        business_unit_ids: Annotated[Optional[StrictStr], Field(description="Comma separated list of Business Unit IDs")] = None,
        created_from: Annotated[Optional[datetime], Field(description="created_at Date Range Beginning")] = None,
        created_to: Annotated[Optional[datetime], Field(description="created_at Date Range Ending")] = None,
        updated_from: Annotated[Optional[datetime], Field(description="updated_at Date Range Beginning")] = None,
        updated_to: Annotated[Optional[datetime], Field(description="updated_at Date Range Ending")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PaginatedClientContainer]:
        """List all discovered Containers, ordered by date identified.


        :param page: Pagination page. The default value is 1
        :type page: float
        :param page_size: Pagination size. The default value is 10 and the maximum is 30
        :type page_size: float
        :param asset_name: Asset name/SaaS URL/IP/IP Range/Port
        :type asset_name: str
        :param statuses: Asset statuses
        :type statuses: List[str]
        :param business_unit_ids: Comma separated list of Business Unit IDs
        :type business_unit_ids: str
        :param created_from: created_at Date Range Beginning
        :type created_from: datetime
        :param created_to: created_at Date Range Ending
        :type created_to: datetime
        :param updated_from: updated_at Date Range Beginning
        :type updated_from: datetime
        :param updated_to: updated_at Date Range Ending
        :type updated_to: datetime
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_list_asset_container_serialize(
            page=page,
            page_size=page_size,
            asset_name=asset_name,
            statuses=statuses,
            business_unit_ids=business_unit_ids,
            created_from=created_from,
            created_to=created_to,
            updated_from=updated_from,
            updated_to=updated_to,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedClientContainer",
            '401': "Unauthorized",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_list_asset_container_without_preload_content(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination page. The default value is 1")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Pagination size. The default value is 10 and the maximum is 30")] = None,
        asset_name: Annotated[Optional[StrictStr], Field(description="Asset name/SaaS URL/IP/IP Range/Port")] = None,
        statuses: Annotated[Optional[List[StrictStr]], Field(description="Asset statuses")] = None,
        business_unit_ids: Annotated[Optional[StrictStr], Field(description="Comma separated list of Business Unit IDs")] = None,
        created_from: Annotated[Optional[datetime], Field(description="created_at Date Range Beginning")] = None,
        created_to: Annotated[Optional[datetime], Field(description="created_at Date Range Ending")] = None,
        updated_from: Annotated[Optional[datetime], Field(description="updated_at Date Range Beginning")] = None,
        updated_to: Annotated[Optional[datetime], Field(description="updated_at Date Range Ending")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List all discovered Containers, ordered by date identified.


        :param page: Pagination page. The default value is 1
        :type page: float
        :param page_size: Pagination size. The default value is 10 and the maximum is 30
        :type page_size: float
        :param asset_name: Asset name/SaaS URL/IP/IP Range/Port
        :type asset_name: str
        :param statuses: Asset statuses
        :type statuses: List[str]
        :param business_unit_ids: Comma separated list of Business Unit IDs
        :type business_unit_ids: str
        :param created_from: created_at Date Range Beginning
        :type created_from: datetime
        :param created_to: created_at Date Range Ending
        :type created_to: datetime
        :param updated_from: updated_at Date Range Beginning
        :type updated_from: datetime
        :param updated_to: updated_at Date Range Ending
        :type updated_to: datetime
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_list_asset_container_serialize(
            page=page,
            page_size=page_size,
            asset_name=asset_name,
            statuses=statuses,
            business_unit_ids=business_unit_ids,
            created_from=created_from,
            created_to=created_to,
            updated_from=updated_from,
            updated_to=updated_to,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PaginatedClientContainer",
            '401': "Unauthorized",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_list_asset_container_serialize(
        self,
        page,
        page_size,
        asset_name,
        statuses,
        business_unit_ids,
        created_from,
        created_to,
        updated_from,
        updated_to,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'statuses': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if page is not None:
            
            _query_params.append(('page', page))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        if asset_name is not None:
            
            _query_params.append(('assetName', asset_name))
            
        if statuses is not None:
            
            _query_params.append(('statuses', statuses))
            
        if business_unit_ids is not None:
            
            _query_params.append(('businessUnitIds', business_unit_ids))
            
        if created_from is not None:
            if isinstance(created_from, datetime):
                _query_params.append(
                    (
                        'created_from',
                        created_from.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('created_from', created_from))
            
        if created_to is not None:
            if isinstance(created_to, datetime):
                _query_params.append(
                    (
                        'created_to',
                        created_to.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('created_to', created_to))
            
        if updated_from is not None:
            if isinstance(updated_from, datetime):
                _query_params.append(
                    (
                        'updated_from',
                        updated_from.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('updated_from', updated_from))
            
        if updated_to is not None:
            if isinstance(updated_to, datetime):
                _query_params.append(
                    (
                        'updated_to',
                        updated_to.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('updated_to', updated_to))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/client/assets/container/list',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update_asset_container_status(
        self,
        id: Union[StrictFloat, StrictInt],
        update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ClientContainerData:
        """Update status of a specific container asset.


        :param id: (required)
        :type id: float
        :param update_client_next_gen_asset_status_dto: (required)
        :type update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_asset_container_status_serialize(
            id=id,
            update_client_next_gen_asset_status_dto=update_client_next_gen_asset_status_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update_asset_container_status_with_http_info(
        self,
        id: Union[StrictFloat, StrictInt],
        update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ClientContainerData]:
        """Update status of a specific container asset.


        :param id: (required)
        :type id: float
        :param update_client_next_gen_asset_status_dto: (required)
        :type update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_asset_container_status_serialize(
            id=id,
            update_client_next_gen_asset_status_dto=update_client_next_gen_asset_status_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update_asset_container_status_without_preload_content(
        self,
        id: Union[StrictFloat, StrictInt],
        update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update status of a specific container asset.


        :param id: (required)
        :type id: float
        :param update_client_next_gen_asset_status_dto: (required)
        :type update_client_next_gen_asset_status_dto: UpdateClientNextGenAssetStatusDto
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_asset_container_status_serialize(
            id=id,
            update_client_next_gen_asset_status_dto=update_client_next_gen_asset_status_dto,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ClientContainerData",
            '401': "Unauthorized",
            '404': "NotFound",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update_asset_container_status_serialize(
        self,
        id,
        update_client_next_gen_asset_status_dto,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if update_client_next_gen_asset_status_dto is not None:
            _body_params = update_client_next_gen_asset_status_dto


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/api/client/assets/container/update-status/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


